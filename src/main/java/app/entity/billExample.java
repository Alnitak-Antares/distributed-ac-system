package app.entity;

import java.util.ArrayList;
import java.util.List;

public class billExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public billExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBillidIsNull() {
            addCriterion("billId is null");
            return (Criteria) this;
        }

        public Criteria andBillidIsNotNull() {
            addCriterion("billId is not null");
            return (Criteria) this;
        }

        public Criteria andBillidEqualTo(Integer value) {
            addCriterion("billId =", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotEqualTo(Integer value) {
            addCriterion("billId <>", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThan(Integer value) {
            addCriterion("billId >", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThanOrEqualTo(Integer value) {
            addCriterion("billId >=", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidLessThan(Integer value) {
            addCriterion("billId <", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidLessThanOrEqualTo(Integer value) {
            addCriterion("billId <=", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidIn(List<Integer> values) {
            addCriterion("billId in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotIn(List<Integer> values) {
            addCriterion("billId not in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidBetween(Integer value1, Integer value2) {
            addCriterion("billId between", value1, value2, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotBetween(Integer value1, Integer value2) {
            addCriterion("billId not between", value1, value2, "billid");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("startTime is null");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("startTime is not null");
            return (Criteria) this;
        }

        public Criteria andStarttimeEqualTo(String value) {
            addCriterion("startTime =", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotEqualTo(String value) {
            addCriterion("startTime <>", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThan(String value) {
            addCriterion("startTime >", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(String value) {
            addCriterion("startTime >=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThan(String value) {
            addCriterion("startTime <", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(String value) {
            addCriterion("startTime <=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLike(String value) {
            addCriterion("startTime like", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotLike(String value) {
            addCriterion("startTime not like", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeIn(List<String> values) {
            addCriterion("startTime in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotIn(List<String> values) {
            addCriterion("startTime not in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeBetween(String value1, String value2) {
            addCriterion("startTime between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotBetween(String value1, String value2) {
            addCriterion("startTime not between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNull() {
            addCriterion("stopTime is null");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNotNull() {
            addCriterion("stopTime is not null");
            return (Criteria) this;
        }

        public Criteria andStoptimeEqualTo(String value) {
            addCriterion("stopTime =", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotEqualTo(String value) {
            addCriterion("stopTime <>", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThan(String value) {
            addCriterion("stopTime >", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThanOrEqualTo(String value) {
            addCriterion("stopTime >=", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThan(String value) {
            addCriterion("stopTime <", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThanOrEqualTo(String value) {
            addCriterion("stopTime <=", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeLike(String value) {
            addCriterion("stopTime like", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotLike(String value) {
            addCriterion("stopTime not like", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeIn(List<String> values) {
            addCriterion("stopTime in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotIn(List<String> values) {
            addCriterion("stopTime not in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeBetween(String value1, String value2) {
            addCriterion("stopTime between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotBetween(String value1, String value2) {
            addCriterion("stopTime not between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andRoomidIsNull() {
            addCriterion("roomId is null");
            return (Criteria) this;
        }

        public Criteria andRoomidIsNotNull() {
            addCriterion("roomId is not null");
            return (Criteria) this;
        }

        public Criteria andRoomidEqualTo(Integer value) {
            addCriterion("roomId =", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotEqualTo(Integer value) {
            addCriterion("roomId <>", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidGreaterThan(Integer value) {
            addCriterion("roomId >", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidGreaterThanOrEqualTo(Integer value) {
            addCriterion("roomId >=", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidLessThan(Integer value) {
            addCriterion("roomId <", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidLessThanOrEqualTo(Integer value) {
            addCriterion("roomId <=", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidIn(List<Integer> values) {
            addCriterion("roomId in", values, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotIn(List<Integer> values) {
            addCriterion("roomId not in", values, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidBetween(Integer value1, Integer value2) {
            addCriterion("roomId between", value1, value2, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotBetween(Integer value1, Integer value2) {
            addCriterion("roomId not between", value1, value2, "roomid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andTotalfeeIsNull() {
            addCriterion("totalFee is null");
            return (Criteria) this;
        }

        public Criteria andTotalfeeIsNotNull() {
            addCriterion("totalFee is not null");
            return (Criteria) this;
        }

        public Criteria andTotalfeeEqualTo(Double value) {
            addCriterion("totalFee =", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeNotEqualTo(Double value) {
            addCriterion("totalFee <>", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeGreaterThan(Double value) {
            addCriterion("totalFee >", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("totalFee >=", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeLessThan(Double value) {
            addCriterion("totalFee <", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeLessThanOrEqualTo(Double value) {
            addCriterion("totalFee <=", value, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeIn(List<Double> values) {
            addCriterion("totalFee in", values, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeNotIn(List<Double> values) {
            addCriterion("totalFee not in", values, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeBetween(Double value1, Double value2) {
            addCriterion("totalFee between", value1, value2, "totalfee");
            return (Criteria) this;
        }

        public Criteria andTotalfeeNotBetween(Double value1, Double value2) {
            addCriterion("totalFee not between", value1, value2, "totalfee");
            return (Criteria) this;
        }

        public Criteria andRunningtimeIsNull() {
            addCriterion("runningTime is null");
            return (Criteria) this;
        }

        public Criteria andRunningtimeIsNotNull() {
            addCriterion("runningTime is not null");
            return (Criteria) this;
        }

        public Criteria andRunningtimeEqualTo(Integer value) {
            addCriterion("runningTime =", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeNotEqualTo(Integer value) {
            addCriterion("runningTime <>", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeGreaterThan(Integer value) {
            addCriterion("runningTime >", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("runningTime >=", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeLessThan(Integer value) {
            addCriterion("runningTime <", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeLessThanOrEqualTo(Integer value) {
            addCriterion("runningTime <=", value, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeIn(List<Integer> values) {
            addCriterion("runningTime in", values, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeNotIn(List<Integer> values) {
            addCriterion("runningTime not in", values, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeBetween(Integer value1, Integer value2) {
            addCriterion("runningTime between", value1, value2, "runningtime");
            return (Criteria) this;
        }

        public Criteria andRunningtimeNotBetween(Integer value1, Integer value2) {
            addCriterion("runningTime not between", value1, value2, "runningtime");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterIsNull() {
            addCriterion("scheduleCounter is null");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterIsNotNull() {
            addCriterion("scheduleCounter is not null");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterEqualTo(Integer value) {
            addCriterion("scheduleCounter =", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterNotEqualTo(Integer value) {
            addCriterion("scheduleCounter <>", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterGreaterThan(Integer value) {
            addCriterion("scheduleCounter >", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterGreaterThanOrEqualTo(Integer value) {
            addCriterion("scheduleCounter >=", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterLessThan(Integer value) {
            addCriterion("scheduleCounter <", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterLessThanOrEqualTo(Integer value) {
            addCriterion("scheduleCounter <=", value, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterIn(List<Integer> values) {
            addCriterion("scheduleCounter in", values, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterNotIn(List<Integer> values) {
            addCriterion("scheduleCounter not in", values, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterBetween(Integer value1, Integer value2) {
            addCriterion("scheduleCounter between", value1, value2, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andSchedulecounterNotBetween(Integer value1, Integer value2) {
            addCriterion("scheduleCounter not between", value1, value2, "schedulecounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterIsNull() {
            addCriterion("detailedRecordCounter is null");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterIsNotNull() {
            addCriterion("detailedRecordCounter is not null");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterEqualTo(Integer value) {
            addCriterion("detailedRecordCounter =", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterNotEqualTo(Integer value) {
            addCriterion("detailedRecordCounter <>", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterGreaterThan(Integer value) {
            addCriterion("detailedRecordCounter >", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterGreaterThanOrEqualTo(Integer value) {
            addCriterion("detailedRecordCounter >=", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterLessThan(Integer value) {
            addCriterion("detailedRecordCounter <", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterLessThanOrEqualTo(Integer value) {
            addCriterion("detailedRecordCounter <=", value, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterIn(List<Integer> values) {
            addCriterion("detailedRecordCounter in", values, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterNotIn(List<Integer> values) {
            addCriterion("detailedRecordCounter not in", values, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterBetween(Integer value1, Integer value2) {
            addCriterion("detailedRecordCounter between", value1, value2, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andDetailedrecordcounterNotBetween(Integer value1, Integer value2) {
            addCriterion("detailedRecordCounter not between", value1, value2, "detailedrecordcounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterIsNull() {
            addCriterion("powerOnCounter is null");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterIsNotNull() {
            addCriterion("powerOnCounter is not null");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterEqualTo(Integer value) {
            addCriterion("powerOnCounter =", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterNotEqualTo(Integer value) {
            addCriterion("powerOnCounter <>", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterGreaterThan(Integer value) {
            addCriterion("powerOnCounter >", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterGreaterThanOrEqualTo(Integer value) {
            addCriterion("powerOnCounter >=", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterLessThan(Integer value) {
            addCriterion("powerOnCounter <", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterLessThanOrEqualTo(Integer value) {
            addCriterion("powerOnCounter <=", value, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterIn(List<Integer> values) {
            addCriterion("powerOnCounter in", values, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterNotIn(List<Integer> values) {
            addCriterion("powerOnCounter not in", values, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterBetween(Integer value1, Integer value2) {
            addCriterion("powerOnCounter between", value1, value2, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andPoweroncounterNotBetween(Integer value1, Integer value2) {
            addCriterion("powerOnCounter not between", value1, value2, "poweroncounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterIsNull() {
            addCriterion("ChangeTempCounter is null");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterIsNotNull() {
            addCriterion("ChangeTempCounter is not null");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterEqualTo(Integer value) {
            addCriterion("ChangeTempCounter =", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterNotEqualTo(Integer value) {
            addCriterion("ChangeTempCounter <>", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterGreaterThan(Integer value) {
            addCriterion("ChangeTempCounter >", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterGreaterThanOrEqualTo(Integer value) {
            addCriterion("ChangeTempCounter >=", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterLessThan(Integer value) {
            addCriterion("ChangeTempCounter <", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterLessThanOrEqualTo(Integer value) {
            addCriterion("ChangeTempCounter <=", value, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterIn(List<Integer> values) {
            addCriterion("ChangeTempCounter in", values, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterNotIn(List<Integer> values) {
            addCriterion("ChangeTempCounter not in", values, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterBetween(Integer value1, Integer value2) {
            addCriterion("ChangeTempCounter between", value1, value2, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangetempcounterNotBetween(Integer value1, Integer value2) {
            addCriterion("ChangeTempCounter not between", value1, value2, "changetempcounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterIsNull() {
            addCriterion("ChangeFunCounter is null");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterIsNotNull() {
            addCriterion("ChangeFunCounter is not null");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterEqualTo(Integer value) {
            addCriterion("ChangeFunCounter =", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterNotEqualTo(Integer value) {
            addCriterion("ChangeFunCounter <>", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterGreaterThan(Integer value) {
            addCriterion("ChangeFunCounter >", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterGreaterThanOrEqualTo(Integer value) {
            addCriterion("ChangeFunCounter >=", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterLessThan(Integer value) {
            addCriterion("ChangeFunCounter <", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterLessThanOrEqualTo(Integer value) {
            addCriterion("ChangeFunCounter <=", value, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterIn(List<Integer> values) {
            addCriterion("ChangeFunCounter in", values, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterNotIn(List<Integer> values) {
            addCriterion("ChangeFunCounter not in", values, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterBetween(Integer value1, Integer value2) {
            addCriterion("ChangeFunCounter between", value1, value2, "changefuncounter");
            return (Criteria) this;
        }

        public Criteria andChangefuncounterNotBetween(Integer value1, Integer value2) {
            addCriterion("ChangeFunCounter not between", value1, value2, "changefuncounter");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated do_not_delete_during_merge Sun May 26 02:41:16 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table distributedairconditioner..bill
     *
     * @mbggenerated Sun May 26 02:41:16 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}